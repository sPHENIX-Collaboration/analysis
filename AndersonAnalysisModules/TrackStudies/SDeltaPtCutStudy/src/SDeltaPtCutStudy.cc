// ----------------------------------------------------------------------------
// 'SDeltaPtCutStudy.cc'
// Derek Anderson
// 06.29.2023
//
// Reads in the 'ntp_track' Ntuple
// generated by the SVtxEvaluator
// class and studies how deltapt/pt
// varies with quality cuts.
// ----------------------------------------------------------------------------

#define SDELTAPTCUTSTUDY_CC

// header files
#include "SDeltaPtCutStudy.h"
#include "SDeltaPtCutStudy.io.h"
#include "SDeltaPtCutStudy.sys.h"
#include "SDeltaPtCutStudy.ana.h"
#include "SDeltaPtCutStudy.plot.h"

using namespace std;



// ctor/dtor ------------------------------------------------------------------

SDeltaPtCutStudy::SDeltaPtCutStudy() {

  cout << "\n  Beginning delta-pt cut study..."  << endl;

}  // end ctor




SDeltaPtCutStudy::~SDeltaPtCutStudy() {

  /* nothing to do here */

}  // end dtor



//  main methods --------------------------------------------------------------

void SDeltaPtCutStudy::Init() {

  // announce initialization
  cout << "    Initializing..." << endl;

  // grab input
  OpenFiles();
  GetTuples();

  // initialize internal vectors & input/output
  InitVectors();
  InitTuples();
  InitHists();
  return;

}  // end Init()



void SDeltaPtCutStudy::Analyze() {

  // announce analysis
  cout << "    Analyzing..." << endl;

  // grab no. of entries for tuple loops
  nTrks = ntTrack -> GetEntries();
  nTrus = ntTruth -> GetEntries();
  cout << "      Beginning tuple loops: " << nTrks << " reco. tracks and " << nTrus << " particles to process" << endl;

  // do 1st loop over tracks to:
  //   (1) apply flat delta-pt cuts
  //   (2) get graphs for pt-dependent cuts
  ApplyFlatDeltaPtCuts();
  CreateSigmaGraphs();

  // do 2nd loop over tracks to:
  //   (1) apply pt-dependent cuts
  //   (2) calculate rejection factors
  ApplyPtDependentDeltaPtCuts();
  CalculateRejectionFactors();

  // get truth info and efficiencies
  FillTruthHistograms();
  CalculateEfficiencies();
  return;

}  // end Analyze()



void SDeltaPtCutStudy::End() {

  // announce completion
  cout << "    Finishing..." << endl;

  // plot results
  SetStyles();
  MakePlots();

  // save and close
  SaveOutput();
  CloseFiles();

  // announce end
  cout << "  Done with delta-pt cut study!\n" << endl;
  return ;

}  // end End()

// end ------------------------------------------------------------------------
