// ----------------------------------------------------------------------------
// 'SDeltaPtCutStudy.plot.h'
// Derek Anderson
// 07.06.2023
//
// Reads in the 'ntp_track' Ntuple
// generated by the SVtxEvaluator
// class and studies how deltapt/pt
// varies with quality cuts.
// ----------------------------------------------------------------------------

#pragma once

using namespace std;



// plotting methods -----------------------------------------------------------

void SDeltaPtCutStudy::SetStyles() {

  // histogram text parameters
  const TString sTitle        = "";
  const TString sCounts       = "counts";
  const TString sPtTrueAxis   = "p_{T}^{true} [GeV/c]";
  const TString sPtRecoAxis   = "p_{T}^{reco} [GeV/c]";
  const TString sPtFracAxis   = "p_{T}^{reco} / p_{T}^{true}";
  const TString sPtDeltaAxis  = "#Deltap_{T} / p_{T}^{reco}";
  const TString sDeltaCutAxis = "max #Deltap_{T} / p_{T}^{reco}";
  const TString sSigmaCutAxis = "n #times #sigma(#Deltap_{T} / p_{T}^{reco})";
  const TString sSigProjAxis  = "#sigma(#Deltap_{T} / p_{T}^{reco})";
  const TString sMuProjAxis   = "#mu(#Deltap_{T} / p_{T}^{reco}) #pm (n #times #sigma(#Deltap_{T} / p_{T}^{reco}))";
  const TString sRejectAxis   = "rejection factor";
  const TString sEffAxis      = "#epsilon_{trk}";

  // set styles
  const float fLab[Const::NPad]  = {0.074, 0.04};
  const float fTit[Const::NPad]  = {0.074, 0.04};
  const float fOffX[Const::NPad] = {1.1,   1.};
  const float fOffY[Const::NPad] = {0.7,   1.3};
  const float fOffZ[Const::NPad] = {1.1,   1.1};
  grRejCut        -> SetMarkerColor(fColPure);
  grRejCut        -> SetMarkerStyle(fMarPure);
  grRejCut        -> SetFillColor(fColPure);
  grRejCut        -> SetFillStyle(fFil);
  grRejCut        -> SetLineColor(fColPure);
  grRejCut        -> SetLineStyle(fLin);
  grRejCut        -> SetLineWidth(fWid);
  grRejCut        -> SetTitle(sTitle.Data());
  grRejCut        -> GetXaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
  grRejCut        -> GetXaxis() -> SetTitle(sDeltaCutAxis.Data());
  grRejCut        -> GetXaxis() -> SetTitleFont(fTxt);
  grRejCut        -> GetXaxis() -> SetTitleSize(fTit[1]);
  grRejCut        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  grRejCut        -> GetXaxis() -> SetLabelFont(fTxt);
  grRejCut        -> GetXaxis() -> SetLabelSize(fLab[1]);
  grRejCut        -> GetXaxis() -> CenterTitle(fCnt);
  grRejCut        -> GetYaxis() -> SetTitle(sRejectAxis.Data());
  grRejCut        -> GetYaxis() -> SetTitleFont(fTxt);
  grRejCut        -> GetYaxis() -> SetTitleSize(fTit[1]);
  grRejCut        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  grRejCut        -> GetYaxis() -> SetLabelFont(fTxt);
  grRejCut        -> GetYaxis() -> SetLabelSize(fLab[1]);
  grRejCut        -> GetYaxis() -> CenterTitle(fCnt);
  grRejSig        -> SetMarkerColor(fColPure);
  grRejSig        -> SetMarkerStyle(fMarTrue);
  grRejSig        -> SetFillColor(fColPure);
  grRejSig        -> SetFillStyle(fFil);
  grRejSig        -> SetLineColor(fColPure);
  grRejSig        -> SetLineStyle(fLin);
  grRejSig        -> SetLineWidth(fWid);
  grRejSig        -> SetTitle(sTitle.Data());
  grRejSig        -> GetXaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
  grRejSig        -> GetXaxis() -> SetTitle(sSigmaCutAxis.Data());
  grRejSig        -> GetXaxis() -> SetTitleFont(fTxt);
  grRejSig        -> GetXaxis() -> SetTitleSize(fTit[1]);
  grRejSig        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  grRejSig        -> GetXaxis() -> SetLabelFont(fTxt);
  grRejSig        -> GetXaxis() -> SetLabelSize(fLab[1]);
  grRejSig        -> GetXaxis() -> CenterTitle(fCnt);
  grRejSig        -> GetYaxis() -> SetTitle(sRejectAxis.Data());
  grRejSig        -> GetYaxis() -> SetTitleFont(fTxt);
  grRejSig        -> GetYaxis() -> SetTitleSize(fTit[1]);
  grRejSig        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  grRejSig        -> GetYaxis() -> SetLabelFont(fTxt);
  grRejSig        -> GetYaxis() -> SetLabelSize(fLab[1]);
  grRejSig        -> GetYaxis() -> CenterTitle(fCnt);
  hEff            -> SetMarkerColor(fColTrk);
  hEff            -> SetMarkerStyle(fMarTrk);
  hEff            -> SetFillColor(fColTrk);
  hEff            -> SetFillStyle(fFil);
  hEff            -> SetLineColor(fColTrk);
  hEff            -> SetLineStyle(fLin);
  hEff            -> SetLineWidth(fWid);
  hEff            -> SetTitle(sTitle.Data());
  hEff            -> SetTitleFont(fTxt);
  hEff            -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  hEff            -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
  hEff            -> GetXaxis() -> SetTitleFont(fTxt);
  hEff            -> GetXaxis() -> SetTitleSize(fTit[0]);
  hEff            -> GetXaxis() -> SetTitleOffset(fOffX[0]);
  hEff            -> GetXaxis() -> SetLabelFont(fTxt);
  hEff            -> GetXaxis() -> SetLabelSize(fLab[0]);
  hEff            -> GetXaxis() -> CenterTitle(fCnt);
  hEff            -> GetYaxis() -> SetTitle(sEffAxis.Data());
  hEff            -> GetYaxis() -> SetTitleFont(fTxt);
  hEff            -> GetYaxis() -> SetTitleSize(fTit[0]);
  hEff            -> GetYaxis() -> SetTitleOffset(fOffY[0]);
  hEff            -> GetYaxis() -> SetLabelFont(fTxt);
  hEff            -> GetYaxis() -> SetLabelSize(fLab[0]);
  hEff            -> GetYaxis() -> CenterTitle(fCnt);
  hPtTruth        -> SetMarkerColor(fColTrue);
  hPtTruth        -> SetMarkerStyle(fMarTrue);
  hPtTruth        -> SetFillColor(fColTrue);
  hPtTruth        -> SetFillStyle(fFil);
  hPtTruth        -> SetLineColor(fColTrue);
  hPtTruth        -> SetLineStyle(fLin);
  hPtTruth        -> SetLineWidth(fWid);
  hPtTruth        -> SetTitle(sTitle.Data());
  hPtTruth        -> SetTitleFont(fTxt);
  hPtTruth        -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  hPtTruth        -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
  hPtTruth        -> GetXaxis() -> SetTitleFont(fTxt);
  hPtTruth        -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtTruth        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtTruth        -> GetXaxis() -> SetLabelFont(fTxt);
  hPtTruth        -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtTruth        -> GetXaxis() -> CenterTitle(fCnt);
  hPtTruth        -> GetYaxis() -> SetTitle(sCounts.Data());
  hPtTruth        -> GetYaxis() -> SetTitleFont(fTxt);
  hPtTruth        -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtTruth        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtTruth        -> GetYaxis() -> SetLabelFont(fTxt);
  hPtTruth        -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtTruth        -> GetYaxis() -> CenterTitle(fCnt);
  hPtDelta        -> SetMarkerColor(fColTrue);
  hPtDelta        -> SetMarkerStyle(fMarTrue);
  hPtDelta        -> SetFillColor(fColTrue);
  hPtDelta        -> SetFillStyle(fFil);
  hPtDelta        -> SetLineColor(fColTrue);
  hPtDelta        -> SetLineStyle(fLin);
  hPtDelta        -> SetLineWidth(fWid);
  hPtDelta        -> SetTitle(sTitle.Data());
  hPtDelta        -> SetTitleFont(fTxt);
  hPtDelta        -> GetXaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
  hPtDelta        -> GetXaxis() -> SetTitle(sPtDeltaAxis.Data());
  hPtDelta        -> GetXaxis() -> SetTitleFont(fTxt);
  hPtDelta        -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtDelta        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtDelta        -> GetXaxis() -> SetLabelFont(fTxt);
  hPtDelta        -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtDelta        -> GetXaxis() -> CenterTitle(fCnt);
  hPtDelta        -> GetYaxis() -> SetTitle(sCounts.Data());
  hPtDelta        -> GetYaxis() -> SetTitleFont(fTxt);
  hPtDelta        -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtDelta        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtDelta        -> GetYaxis() -> SetLabelFont(fTxt);
  hPtDelta        -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtDelta        -> GetYaxis() -> CenterTitle(fCnt);
  hPtTrack        -> SetMarkerColor(fColTrue);
  hPtTrack        -> SetMarkerStyle(fMarTrue);
  hPtTrack        -> SetFillColor(fColTrue);
  hPtTrack        -> SetFillStyle(fFil);
  hPtTrack        -> SetLineColor(fColTrue);
  hPtTrack        -> SetLineStyle(fLin);
  hPtTrack        -> SetLineWidth(fWid);
  hPtTrack        -> SetTitle(sTitle.Data());
  hPtTrack        -> SetTitleFont(fTxt);
  hPtTrack        -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  hPtTrack        -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
  hPtTrack        -> GetXaxis() -> SetTitleFont(fTxt);
  hPtTrack        -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtTrack        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtTrack        -> GetXaxis() -> SetLabelFont(fTxt);
  hPtTrack        -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtTrack        -> GetXaxis() -> CenterTitle(fCnt);
  hPtTrack        -> GetYaxis() -> SetTitle(sCounts.Data());
  hPtTrack        -> GetYaxis() -> SetTitleFont(fTxt);
  hPtTrack        -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtTrack        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtTrack        -> GetYaxis() -> SetLabelFont(fTxt);
  hPtTrack        -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtTrack        -> GetYaxis() -> CenterTitle(fCnt);
  hPtFrac         -> SetMarkerColor(fColTrue);
  hPtFrac         -> SetMarkerStyle(fMarTrue);
  hPtFrac         -> SetFillColor(fColTrue);
  hPtFrac         -> SetFillStyle(fFil);
  hPtFrac         -> SetLineColor(fColTrue);
  hPtFrac         -> SetLineStyle(fLin);
  hPtFrac         -> SetLineWidth(fWid);
  hPtFrac         -> SetTitle(sTitle.Data());
  hPtFrac         -> SetTitleFont(fTxt);
  hPtFrac         -> GetXaxis() -> SetRangeUser(rFracRange[0], rFracRange[1]);
  hPtFrac         -> GetXaxis() -> SetTitle(sPtFracAxis.Data());
  hPtFrac         -> GetXaxis() -> SetTitleFont(fTxt);
  hPtFrac         -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtFrac         -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtFrac         -> GetXaxis() -> SetLabelFont(fTxt);
  hPtFrac         -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtFrac         -> GetXaxis() -> CenterTitle(fCnt);
  hPtFrac         -> GetYaxis() -> SetTitle(sCounts.Data());
  hPtFrac         -> GetYaxis() -> SetTitleFont(fTxt);
  hPtFrac         -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtFrac         -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtFrac         -> GetYaxis() -> SetLabelFont(fTxt);
  hPtFrac         -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtFrac         -> GetYaxis() -> CenterTitle(fCnt);
  hPtTrkTru       -> SetMarkerColor(fColTrk);
  hPtTrkTru       -> SetMarkerStyle(fMarTrk);
  hPtTrkTru       -> SetFillColor(fColTrk);
  hPtTrkTru       -> SetFillStyle(fFil);
  hPtTrkTru       -> SetLineColor(fColTrk);
  hPtTrkTru       -> SetLineStyle(fLin);
  hPtTrkTru       -> SetLineWidth(fWid);
  hPtTrkTru       -> SetTitle(sTitle.Data());
  hPtTrkTru       -> SetTitleFont(fTxt);
  hPtTrkTru       -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  hPtTrkTru       -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
  hPtTrkTru       -> GetXaxis() -> SetTitleFont(fTxt);
  hPtTrkTru       -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtTrkTru       -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtTrkTru       -> GetXaxis() -> SetLabelFont(fTxt);
  hPtTrkTru       -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtTrkTru       -> GetXaxis() -> CenterTitle(fCnt);
  hPtTrkTru       -> GetYaxis() -> SetTitle(sCounts.Data());
  hPtTrkTru       -> GetYaxis() -> SetTitleFont(fTxt);
  hPtTrkTru       -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtTrkTru       -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtTrkTru       -> GetYaxis() -> SetLabelFont(fTxt);
  hPtTrkTru       -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtTrkTru       -> GetYaxis() -> CenterTitle(fCnt);
  hPtDeltaVsFrac  -> SetMarkerColor(fColTrk);
  hPtDeltaVsFrac  -> SetMarkerStyle(fMarTrk);
  hPtDeltaVsFrac  -> SetFillColor(fColTrk);
  hPtDeltaVsFrac  -> SetFillStyle(fFil);
  hPtDeltaVsFrac  -> SetLineColor(fColTrk);
  hPtDeltaVsFrac  -> SetLineStyle(fLin);
  hPtDeltaVsFrac  -> SetLineWidth(fWid);
  hPtDeltaVsFrac  -> SetTitle(sTitle.Data());
  hPtDeltaVsFrac  -> SetTitleFont(fTxt);
  hPtDeltaVsFrac  -> GetXaxis() -> SetRangeUser(rFracRange[0], rFracRange[1]);
  hPtDeltaVsFrac  -> GetXaxis() -> SetTitle(sPtFracAxis.Data());
  hPtDeltaVsFrac  -> GetXaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsFrac  -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsFrac  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtDeltaVsFrac  -> GetXaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsFrac  -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsFrac  -> GetXaxis() -> CenterTitle(fCnt);
  hPtDeltaVsFrac  -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
  hPtDeltaVsFrac  -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
  hPtDeltaVsFrac  -> GetYaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsFrac  -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsFrac  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtDeltaVsFrac  -> GetYaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsFrac  -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsFrac  -> GetYaxis() -> CenterTitle(fCnt);
  hPtDeltaVsFrac  -> GetZaxis() -> SetTitle(sCounts.Data());
  hPtDeltaVsFrac  -> GetZaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsFrac  -> GetZaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsFrac  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
  hPtDeltaVsFrac  -> GetZaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsFrac  -> GetZaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsFrac  -> GetZaxis() -> CenterTitle(fCnt);
  hPtDeltaVsTrue  -> SetMarkerColor(fColTrk);
  hPtDeltaVsTrue  -> SetMarkerStyle(fMarTrk);
  hPtDeltaVsTrue  -> SetFillColor(fColTrk);
  hPtDeltaVsTrue  -> SetFillStyle(fFil);
  hPtDeltaVsTrue  -> SetLineColor(fColTrk);
  hPtDeltaVsTrue  -> SetLineStyle(fLin);
  hPtDeltaVsTrue  -> SetLineWidth(fWid);
  hPtDeltaVsTrue  -> SetTitle(sTitle.Data());
  hPtDeltaVsTrue  -> SetTitleFont(fTxt);
  hPtDeltaVsTrue  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  hPtDeltaVsTrue  -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
  hPtDeltaVsTrue  -> GetXaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsTrue  -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsTrue  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtDeltaVsTrue  -> GetXaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsTrue  -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsTrue  -> GetXaxis() -> CenterTitle(fCnt);
  hPtDeltaVsTrue  -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
  hPtDeltaVsTrue  -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
  hPtDeltaVsTrue  -> GetYaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsTrue  -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsTrue  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtDeltaVsTrue  -> GetYaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsTrue  -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsTrue  -> GetYaxis() -> CenterTitle(fCnt);
  hPtDeltaVsTrue  -> GetZaxis() -> SetTitle(sCounts.Data());
  hPtDeltaVsTrue  -> GetZaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsTrue  -> GetZaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsTrue  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
  hPtDeltaVsTrue  -> GetZaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsTrue  -> GetZaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsTrue  -> GetZaxis() -> CenterTitle(fCnt);
  hPtDeltaVsTrack -> SetMarkerColor(fColTrk);
  hPtDeltaVsTrack -> SetMarkerStyle(fMarTrk);
  hPtDeltaVsTrack -> SetFillColor(fColTrk);
  hPtDeltaVsTrack -> SetFillStyle(fFil);
  hPtDeltaVsTrack -> SetLineColor(fColTrk);
  hPtDeltaVsTrack -> SetLineStyle(fLin);
  hPtDeltaVsTrack -> SetLineWidth(fWid);
  hPtDeltaVsTrack -> SetTitle(sTitle.Data());
  hPtDeltaVsTrack -> SetTitleFont(fTxt);
  hPtDeltaVsTrack -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  hPtDeltaVsTrack -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
  hPtDeltaVsTrack -> GetXaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsTrack -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsTrack -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtDeltaVsTrack -> GetXaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsTrack -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsTrack -> GetXaxis() -> CenterTitle(fCnt);
  hPtDeltaVsTrack -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
  hPtDeltaVsTrack -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
  hPtDeltaVsTrack -> GetYaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsTrack -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsTrack -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtDeltaVsTrack -> GetYaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsTrack -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsTrack -> GetYaxis() -> CenterTitle(fCnt);
  hPtDeltaVsTrack -> GetZaxis() -> SetTitle(sCounts.Data());
  hPtDeltaVsTrack -> GetZaxis() -> SetTitleFont(fTxt);
  hPtDeltaVsTrack -> GetZaxis() -> SetTitleSize(fTit[1]);
  hPtDeltaVsTrack -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
  hPtDeltaVsTrack -> GetZaxis() -> SetLabelFont(fTxt);
  hPtDeltaVsTrack -> GetZaxis() -> SetLabelSize(fLab[1]);
  hPtDeltaVsTrack -> GetZaxis() -> CenterTitle(fCnt);
  hPtTrueVsTrack  -> SetMarkerColor(fColTrk);
  hPtTrueVsTrack  -> SetMarkerStyle(fMarTrk);
  hPtTrueVsTrack  -> SetFillColor(fColTrk);
  hPtTrueVsTrack  -> SetFillStyle(fFil);
  hPtTrueVsTrack  -> SetLineColor(fColTrk);
  hPtTrueVsTrack  -> SetLineStyle(fLin);
  hPtTrueVsTrack  -> SetLineWidth(fWid);
  hPtTrueVsTrack  -> SetTitle(sTitle.Data());
  hPtTrueVsTrack  -> SetTitleFont(fTxt);
  hPtTrueVsTrack  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  hPtTrueVsTrack  -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
  hPtTrueVsTrack  -> GetXaxis() -> SetTitleFont(fTxt);
  hPtTrueVsTrack  -> GetXaxis() -> SetTitleSize(fTit[1]);
  hPtTrueVsTrack  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  hPtTrueVsTrack  -> GetXaxis() -> SetLabelFont(fTxt);
  hPtTrueVsTrack  -> GetXaxis() -> SetLabelSize(fLab[1]);
  hPtTrueVsTrack  -> GetXaxis() -> CenterTitle(fCnt);
  hPtTrueVsTrack  -> GetYaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  hPtTrueVsTrack  -> GetYaxis() -> SetTitle(sPtTrueAxis.Data());
  hPtTrueVsTrack  -> GetYaxis() -> SetTitleFont(fTxt);
  hPtTrueVsTrack  -> GetYaxis() -> SetTitleSize(fTit[1]);
  hPtTrueVsTrack  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  hPtTrueVsTrack  -> GetYaxis() -> SetLabelFont(fTxt);
  hPtTrueVsTrack  -> GetYaxis() -> SetLabelSize(fLab[1]);
  hPtTrueVsTrack  -> GetYaxis() -> CenterTitle(fCnt);
  hPtTrueVsTrack  -> GetZaxis() -> SetTitle(sCounts.Data());
  hPtTrueVsTrack  -> GetZaxis() -> SetTitleFont(fTxt);
  hPtTrueVsTrack  -> GetZaxis() -> SetTitleSize(fTit[1]);
  hPtTrueVsTrack  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
  hPtTrueVsTrack  -> GetZaxis() -> SetLabelFont(fTxt);
  hPtTrueVsTrack  -> GetZaxis() -> SetLabelSize(fLab[1]);
  hPtTrueVsTrack  -> GetZaxis() -> CenterTitle(fCnt);

  // set styles of delta-pt projection histograms
  grMuProj  -> SetMarkerColor(fColTrue);
  grMuProj  -> SetMarkerStyle(fMarTrue);
  grMuProj  -> SetFillColor(fColTrue);
  grMuProj  -> SetFillStyle(fFil);
  grMuProj  -> SetLineColor(fColTrue);
  grMuProj  -> SetLineStyle(fLin);
  grMuProj  -> SetLineWidth(fWid);
  grMuProj  -> SetTitle(sTitle.Data());
  grMuProj  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  grMuProj  -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
  grMuProj  -> GetXaxis() -> SetTitleFont(fTxt);
  grMuProj  -> GetXaxis() -> SetTitleSize(fTit[1]);
  grMuProj  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  grMuProj  -> GetXaxis() -> SetLabelFont(fTxt);
  grMuProj  -> GetXaxis() -> SetLabelSize(fLab[1]);
  grMuProj  -> GetXaxis() -> CenterTitle(fCnt);
  grMuProj  -> GetYaxis() -> SetTitle(sMuProjAxis.Data());
  grMuProj  -> GetYaxis() -> SetTitleFont(fTxt);
  grMuProj  -> GetYaxis() -> SetTitleSize(fTit[1]);
  grMuProj  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  grMuProj  -> GetYaxis() -> SetLabelFont(fTxt);
  grMuProj  -> GetYaxis() -> SetLabelSize(fLab[1]);
  grMuProj  -> GetYaxis() -> CenterTitle(fCnt);
  grSigProj -> SetMarkerColor(fColTrue);
  grSigProj -> SetMarkerStyle(fMarTrue);
  grSigProj -> SetFillColor(fColTrue);
  grSigProj -> SetFillStyle(fFil);
  grSigProj -> SetLineColor(fColTrue);
  grSigProj -> SetLineStyle(fLin);
  grSigProj -> SetLineWidth(fWid);
  grSigProj -> SetTitle(sTitle.Data());
  grSigProj -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
  grSigProj -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
  grSigProj -> GetXaxis() -> SetTitleFont(fTxt);
  grSigProj -> GetXaxis() -> SetTitleSize(fTit[1]);
  grSigProj -> GetXaxis() -> SetTitleOffset(fOffX[1]);
  grSigProj -> GetXaxis() -> SetLabelFont(fTxt);
  grSigProj -> GetXaxis() -> SetLabelSize(fLab[1]);
  grSigProj -> GetXaxis() -> CenterTitle(fCnt);
  grSigProj -> GetYaxis() -> SetTitle(sSigProjAxis.Data());
  grSigProj -> GetYaxis() -> SetTitleFont(fTxt);
  grSigProj -> GetYaxis() -> SetTitleSize(fTit[1]);
  grSigProj -> GetYaxis() -> SetTitleOffset(fOffY[1]);
  grSigProj -> GetYaxis() -> SetLabelFont(fTxt);
  grSigProj -> GetYaxis() -> SetLabelSize(fLab[1]);
  grSigProj -> GetYaxis() -> CenterTitle(fCnt);
  for (size_t iProj = 0; iProj < nProj; iProj++) {
    hPtDeltaProj[iProj] -> SetMarkerColor(fColProj[iProj]);
    hPtDeltaProj[iProj] -> SetMarkerStyle(fMarProj[iProj]);
    hPtDeltaProj[iProj] -> SetFillColor(fColProj[iProj]);
    hPtDeltaProj[iProj] -> SetFillStyle(fFil);
    hPtDeltaProj[iProj] -> SetLineColor(fColProj[iProj]);
    hPtDeltaProj[iProj] -> SetLineStyle(fLin);
    hPtDeltaProj[iProj] -> SetLineWidth(fWid);
    hPtDeltaProj[iProj] -> SetTitle(sTitle.Data());
    hPtDeltaProj[iProj] -> SetTitleFont(fTxt);
    hPtDeltaProj[iProj] -> GetXaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaProj[iProj] -> GetXaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaProj[iProj] -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaProj[iProj] -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaProj[iProj] -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaProj[iProj] -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaProj[iProj] -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaProj[iProj] -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaProj[iProj] -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtDeltaProj[iProj] -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaProj[iProj] -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaProj[iProj] -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaProj[iProj] -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaProj[iProj] -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaProj[iProj] -> GetYaxis() -> CenterTitle(fCnt);
  }
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    grMuHiProj[iSig]  -> SetMarkerColor(fColSig[iSig]);
    grMuHiProj[iSig]  -> SetMarkerStyle(fMarSig[iSig]);
    grMuHiProj[iSig]  -> SetFillColor(fColSig[iSig]);
    grMuHiProj[iSig]  -> SetFillStyle(fFil);
    grMuHiProj[iSig]  -> SetLineColor(fColSig[iSig]);
    grMuHiProj[iSig]  -> SetLineStyle(fLin);
    grMuHiProj[iSig]  -> SetLineWidth(fWid);
    grMuHiProj[iSig]  -> SetTitle(sTitle.Data());
    grMuHiProj[iSig]  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    grMuHiProj[iSig]  -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
    grMuHiProj[iSig]  -> GetXaxis() -> SetTitleFont(fTxt);
    grMuHiProj[iSig]  -> GetXaxis() -> SetTitleSize(fTit[1]);
    grMuHiProj[iSig]  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    grMuHiProj[iSig]  -> GetXaxis() -> SetLabelFont(fTxt);
    grMuHiProj[iSig]  -> GetXaxis() -> SetLabelSize(fLab[1]);
    grMuHiProj[iSig]  -> GetXaxis() -> CenterTitle(fCnt);
    grMuHiProj[iSig]  -> GetYaxis() -> SetTitle(sMuProjAxis.Data());
    grMuHiProj[iSig]  -> GetYaxis() -> SetTitleFont(fTxt);
    grMuHiProj[iSig]  -> GetYaxis() -> SetTitleSize(fTit[1]);
    grMuHiProj[iSig]  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    grMuHiProj[iSig]  -> GetYaxis() -> SetLabelFont(fTxt);
    grMuHiProj[iSig]  -> GetYaxis() -> SetLabelSize(fLab[1]);
    grMuHiProj[iSig]  -> GetYaxis() -> CenterTitle(fCnt);
    grMuLoProj[iSig]  -> SetMarkerColor(fColSig[iSig]);
    grMuLoProj[iSig]  -> SetMarkerStyle(fMarSig[iSig]);
    grMuLoProj[iSig]  -> SetFillColor(fColSig[iSig]);
    grMuLoProj[iSig]  -> SetFillStyle(fFil);
    grMuLoProj[iSig]  -> SetLineColor(fColSig[iSig]);
    grMuLoProj[iSig]  -> SetLineStyle(fLin);
    grMuLoProj[iSig]  -> SetLineWidth(fWid);
    grMuLoProj[iSig]  -> SetTitle(sTitle.Data());
    grMuLoProj[iSig]  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    grMuLoProj[iSig]  -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
    grMuLoProj[iSig]  -> GetXaxis() -> SetTitleFont(fTxt);
    grMuLoProj[iSig]  -> GetXaxis() -> SetTitleSize(fTit[1]);
    grMuLoProj[iSig]  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    grMuLoProj[iSig]  -> GetXaxis() -> SetLabelFont(fTxt);
    grMuLoProj[iSig]  -> GetXaxis() -> SetLabelSize(fLab[1]);
    grMuLoProj[iSig]  -> GetXaxis() -> CenterTitle(fCnt);
    grMuLoProj[iSig]  -> GetYaxis() -> SetTitle(sMuProjAxis.Data());
    grMuLoProj[iSig]  -> GetYaxis() -> SetTitleFont(fTxt);
    grMuLoProj[iSig]  -> GetYaxis() -> SetTitleSize(fTit[1]);
    grMuLoProj[iSig]  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    grMuLoProj[iSig]  -> GetYaxis() -> SetLabelFont(fTxt);
    grMuLoProj[iSig]  -> GetYaxis() -> SetLabelSize(fLab[1]);
    grMuLoProj[iSig]  -> GetYaxis() -> CenterTitle(fCnt);
  }

  // set styles of flat delta-pt cut histograms
  for (size_t iCut = 0; iCut < nDPtCuts; iCut++) {
    hEffCut[iCut]            -> SetMarkerColor(fColCut[iCut]);
    hEffCut[iCut]            -> SetMarkerStyle(fMarCut[iCut]);
    hEffCut[iCut]            -> SetFillColor(fColCut[iCut]);
    hEffCut[iCut]            -> SetFillStyle(fFil);
    hEffCut[iCut]            -> SetLineColor(fColCut[iCut]);
    hEffCut[iCut]            -> SetLineStyle(fLin);
    hEffCut[iCut]            -> SetLineWidth(fWid);
    hEffCut[iCut]            -> SetTitle(sTitle.Data());
    hEffCut[iCut]            -> SetTitleFont(fTxt);
    hEffCut[iCut]            -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hEffCut[iCut]            -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
    hEffCut[iCut]            -> GetXaxis() -> SetTitleFont(fTxt);
    hEffCut[iCut]            -> GetXaxis() -> SetTitleSize(fTit[0]);
    hEffCut[iCut]            -> GetXaxis() -> SetTitleOffset(fOffX[0]);
    hEffCut[iCut]            -> GetXaxis() -> SetLabelFont(fTxt);
    hEffCut[iCut]            -> GetXaxis() -> SetLabelSize(fLab[0]);
    hEffCut[iCut]            -> GetXaxis() -> CenterTitle(fCnt);
    hEffCut[iCut]            -> GetYaxis() -> SetTitle(sEffAxis.Data());
    hEffCut[iCut]            -> GetYaxis() -> SetTitleFont(fTxt);
    hEffCut[iCut]            -> GetYaxis() -> SetTitleSize(fTit[0]);
    hEffCut[iCut]            -> GetYaxis() -> SetTitleOffset(fOffY[0]);
    hEffCut[iCut]            -> GetYaxis() -> SetLabelFont(fTxt);
    hEffCut[iCut]            -> GetYaxis() -> SetLabelSize(fLab[0]);
    hEffCut[iCut]            -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaCut[iCut]        -> SetMarkerColor(fColCut[iCut]);
    hPtDeltaCut[iCut]        -> SetMarkerStyle(fMarCut[iCut]);
    hPtDeltaCut[iCut]        -> SetFillColor(fColCut[iCut]);
    hPtDeltaCut[iCut]        -> SetFillStyle(fFil);
    hPtDeltaCut[iCut]        -> SetLineColor(fColCut[iCut]);
    hPtDeltaCut[iCut]        -> SetLineStyle(fLin);
    hPtDeltaCut[iCut]        -> SetLineWidth(fWid);
    hPtDeltaCut[iCut]        -> SetTitle(sTitle.Data());
    hPtDeltaCut[iCut]        -> SetTitleFont(fTxt);
    hPtDeltaCut[iCut]        -> GetXaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaCut[iCut]        -> GetXaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaCut[iCut]        -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaCut[iCut]        -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaCut[iCut]        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaCut[iCut]        -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaCut[iCut]        -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaCut[iCut]        -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaCut[iCut]        -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtDeltaCut[iCut]        -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaCut[iCut]        -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaCut[iCut]        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaCut[iCut]        -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaCut[iCut]        -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaCut[iCut]        -> GetYaxis() -> CenterTitle(fCnt);
    hPtTrackCut[iCut]        -> SetMarkerColor(fColCut[iCut]);
    hPtTrackCut[iCut]        -> SetMarkerStyle(fMarCut[iCut]);
    hPtTrackCut[iCut]        -> SetFillColor(fColCut[iCut]);
    hPtTrackCut[iCut]        -> SetFillStyle(fFil);
    hPtTrackCut[iCut]        -> SetLineColor(fColCut[iCut]);
    hPtTrackCut[iCut]        -> SetLineStyle(fLin);
    hPtTrackCut[iCut]        -> SetLineWidth(fWid);
    hPtTrackCut[iCut]        -> SetTitle(sTitle.Data());
    hPtTrackCut[iCut]        -> SetTitleFont(fTxt);
    hPtTrackCut[iCut]        -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtTrackCut[iCut]        -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
    hPtTrackCut[iCut]        -> GetXaxis() -> SetTitleFont(fTxt);
    hPtTrackCut[iCut]        -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtTrackCut[iCut]        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtTrackCut[iCut]        -> GetXaxis() -> SetLabelFont(fTxt);
    hPtTrackCut[iCut]        -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtTrackCut[iCut]        -> GetXaxis() -> CenterTitle(fCnt);
    hPtTrackCut[iCut]        -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtTrackCut[iCut]        -> GetYaxis() -> SetTitleFont(fTxt);
    hPtTrackCut[iCut]        -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtTrackCut[iCut]        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtTrackCut[iCut]        -> GetYaxis() -> SetLabelFont(fTxt);
    hPtTrackCut[iCut]        -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtTrackCut[iCut]        -> GetYaxis() -> CenterTitle(fCnt);
    hPtFracCut[iCut]         -> SetMarkerColor(fColCut[iCut]);
    hPtFracCut[iCut]         -> SetMarkerStyle(fMarCut[iCut]);
    hPtFracCut[iCut]         -> SetFillColor(fColCut[iCut]);
    hPtFracCut[iCut]         -> SetFillStyle(fFil);
    hPtFracCut[iCut]         -> SetLineColor(fColCut[iCut]);
    hPtFracCut[iCut]         -> SetLineStyle(fLin);
    hPtFracCut[iCut]         -> SetLineWidth(fWid);
    hPtFracCut[iCut]         -> SetTitle(sTitle.Data());
    hPtFracCut[iCut]         -> SetTitleFont(fTxt);
    hPtFracCut[iCut]         -> GetXaxis() -> SetRangeUser(rFracRange[0], rFracRange[1]);
    hPtFracCut[iCut]         -> GetXaxis() -> SetTitle(sPtFracAxis.Data());
    hPtFracCut[iCut]         -> GetXaxis() -> SetTitleFont(fTxt);
    hPtFracCut[iCut]         -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtFracCut[iCut]         -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtFracCut[iCut]         -> GetXaxis() -> SetLabelFont(fTxt);
    hPtFracCut[iCut]         -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtFracCut[iCut]         -> GetXaxis() -> CenterTitle(fCnt);
    hPtFracCut[iCut]         -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtFracCut[iCut]         -> GetYaxis() -> SetTitleFont(fTxt);
    hPtFracCut[iCut]         -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtFracCut[iCut]         -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtFracCut[iCut]         -> GetYaxis() -> SetLabelFont(fTxt);
    hPtFracCut[iCut]         -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtFracCut[iCut]         -> GetYaxis() -> CenterTitle(fCnt);
    hPtTrkTruCut[iCut]       -> SetMarkerColor(fColCut[iCut]);
    hPtTrkTruCut[iCut]       -> SetMarkerStyle(fMarCut[iCut]);
    hPtTrkTruCut[iCut]       -> SetFillColor(fColCut[iCut]);
    hPtTrkTruCut[iCut]       -> SetFillStyle(fFil);
    hPtTrkTruCut[iCut]       -> SetLineColor(fColCut[iCut]);
    hPtTrkTruCut[iCut]       -> SetLineStyle(fLin);
    hPtTrkTruCut[iCut]       -> SetLineWidth(fWid);
    hPtTrkTruCut[iCut]       -> SetTitle(sTitle.Data());
    hPtTrkTruCut[iCut]       -> SetTitleFont(fTxt);
    hPtTrkTruCut[iCut]       -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtTrkTruCut[iCut]       -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
    hPtTrkTruCut[iCut]       -> GetXaxis() -> SetTitleFont(fTxt);
    hPtTrkTruCut[iCut]       -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtTrkTruCut[iCut]       -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtTrkTruCut[iCut]       -> GetXaxis() -> SetLabelFont(fTxt);
    hPtTrkTruCut[iCut]       -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtTrkTruCut[iCut]       -> GetXaxis() -> CenterTitle(fCnt);
    hPtTrkTruCut[iCut]       -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtTrkTruCut[iCut]       -> GetYaxis() -> SetTitleFont(fTxt);
    hPtTrkTruCut[iCut]       -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtTrkTruCut[iCut]       -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtTrkTruCut[iCut]       -> GetYaxis() -> SetLabelFont(fTxt);
    hPtTrkTruCut[iCut]       -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtTrkTruCut[iCut]       -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaVsFracCut[iCut]  -> SetMarkerColor(fColCut[iCut]);
    hPtDeltaVsFracCut[iCut]  -> SetMarkerStyle(fMarCut[iCut]);
    hPtDeltaVsFracCut[iCut]  -> SetFillColor(fColCut[iCut]);
    hPtDeltaVsFracCut[iCut]  -> SetFillStyle(fFil);
    hPtDeltaVsFracCut[iCut]  -> SetLineColor(fColCut[iCut]);
    hPtDeltaVsFracCut[iCut]  -> SetLineStyle(fLin);
    hPtDeltaVsFracCut[iCut]  -> SetLineWidth(fWid);
    hPtDeltaVsFracCut[iCut]  -> SetTitle(sTitle.Data());
    hPtDeltaVsFracCut[iCut]  -> SetTitleFont(fTxt);
    hPtDeltaVsFracCut[iCut]  -> GetXaxis() -> SetRangeUser(rFracRange[0], rFracRange[1]);
    hPtDeltaVsFracCut[iCut]  -> GetXaxis() -> SetTitle(sPtFracAxis.Data());
    hPtDeltaVsFracCut[iCut]  -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsFracCut[iCut]  -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsFracCut[iCut]  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaVsFracCut[iCut]  -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsFracCut[iCut]  -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsFracCut[iCut]  -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaVsFracCut[iCut]  -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaVsFracCut[iCut]  -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaVsFracCut[iCut]  -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsFracCut[iCut]  -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsFracCut[iCut]  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaVsFracCut[iCut]  -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsFracCut[iCut]  -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsFracCut[iCut]  -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaVsFracCut[iCut]  -> GetZaxis() -> SetTitle(sCounts.Data());
    hPtDeltaVsFracCut[iCut]  -> GetZaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsFracCut[iCut]  -> GetZaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsFracCut[iCut]  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
    hPtDeltaVsFracCut[iCut]  -> GetZaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsFracCut[iCut]  -> GetZaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsFracCut[iCut]  -> GetZaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrueCut[iCut]  -> SetMarkerColor(fColTrk);
    hPtDeltaVsTrueCut[iCut]  -> SetMarkerStyle(fMarTrk);
    hPtDeltaVsTrueCut[iCut]  -> SetFillColor(fColTrk);
    hPtDeltaVsTrueCut[iCut]  -> SetFillStyle(fFil);
    hPtDeltaVsTrueCut[iCut]  -> SetLineColor(fColTrk);
    hPtDeltaVsTrueCut[iCut]  -> SetLineStyle(fLin);
    hPtDeltaVsTrueCut[iCut]  -> SetLineWidth(fWid);
    hPtDeltaVsTrueCut[iCut]  -> SetTitle(sTitle.Data());
    hPtDeltaVsTrueCut[iCut]  -> SetTitleFont(fTxt);
    hPtDeltaVsTrueCut[iCut]  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
    hPtDeltaVsTrueCut[iCut]  -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrueCut[iCut]  -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrueCut[iCut]  -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrueCut[iCut]  -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaVsTrueCut[iCut]  -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrueCut[iCut]  -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrueCut[iCut]  -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrueCut[iCut]  -> GetZaxis() -> SetTitle(sCounts.Data());
    hPtDeltaVsTrueCut[iCut]  -> GetZaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrueCut[iCut]  -> GetZaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetZaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrueCut[iCut]  -> GetZaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrueCut[iCut]  -> GetZaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrackCut[iCut] -> SetMarkerColor(fColTrk);
    hPtDeltaVsTrackCut[iCut] -> SetMarkerStyle(fMarTrk);
    hPtDeltaVsTrackCut[iCut] -> SetFillColor(fColTrk);
    hPtDeltaVsTrackCut[iCut] -> SetFillStyle(fFil);
    hPtDeltaVsTrackCut[iCut] -> SetLineColor(fColTrk);
    hPtDeltaVsTrackCut[iCut] -> SetLineStyle(fLin);
    hPtDeltaVsTrackCut[iCut] -> SetLineWidth(fWid);
    hPtDeltaVsTrackCut[iCut] -> SetTitle(sTitle.Data());
    hPtDeltaVsTrackCut[iCut] -> SetTitleFont(fTxt);
    hPtDeltaVsTrackCut[iCut] -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtDeltaVsTrackCut[iCut] -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
    hPtDeltaVsTrackCut[iCut] -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrackCut[iCut] -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrackCut[iCut] -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaVsTrackCut[iCut] -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrackCut[iCut] -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrackCut[iCut] -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrackCut[iCut] -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaVsTrackCut[iCut] -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaVsTrackCut[iCut] -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrackCut[iCut] -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrackCut[iCut] -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaVsTrackCut[iCut] -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrackCut[iCut] -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrackCut[iCut] -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrackCut[iCut] -> GetZaxis() -> SetTitle(sCounts.Data());
    hPtDeltaVsTrackCut[iCut] -> GetZaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrackCut[iCut] -> GetZaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrackCut[iCut] -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
    hPtDeltaVsTrackCut[iCut] -> GetZaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrackCut[iCut] -> GetZaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrackCut[iCut] -> GetZaxis() -> CenterTitle(fCnt);
    hPtTrueVsTrackCut[iCut]  -> SetMarkerColor(fColCut[iCut]);
    hPtTrueVsTrackCut[iCut]  -> SetMarkerStyle(fMarCut[iCut]);
    hPtTrueVsTrackCut[iCut]  -> SetFillColor(fColCut[iCut]);
    hPtTrueVsTrackCut[iCut]  -> SetFillStyle(fFil);
    hPtTrueVsTrackCut[iCut]  -> SetLineColor(fColCut[iCut]);
    hPtTrueVsTrackCut[iCut]  -> SetLineStyle(fLin);
    hPtTrueVsTrackCut[iCut]  -> SetLineWidth(fWid);
    hPtTrueVsTrackCut[iCut]  -> SetTitle(sTitle.Data());
    hPtTrueVsTrackCut[iCut]  -> SetTitleFont(fTxt);
    hPtTrueVsTrackCut[iCut]  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtTrueVsTrackCut[iCut]  -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
    hPtTrueVsTrackCut[iCut]  -> GetXaxis() -> SetTitleFont(fTxt);
    hPtTrueVsTrackCut[iCut]  -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtTrueVsTrackCut[iCut]  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtTrueVsTrackCut[iCut]  -> GetXaxis() -> SetLabelFont(fTxt);
    hPtTrueVsTrackCut[iCut]  -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtTrueVsTrackCut[iCut]  -> GetXaxis() -> CenterTitle(fCnt);
    hPtTrueVsTrackCut[iCut]  -> GetYaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtTrueVsTrackCut[iCut]  -> GetYaxis() -> SetTitle(sPtTrueAxis.Data());
    hPtTrueVsTrackCut[iCut]  -> GetYaxis() -> SetTitleFont(fTxt);
    hPtTrueVsTrackCut[iCut]  -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtTrueVsTrackCut[iCut]  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtTrueVsTrackCut[iCut]  -> GetYaxis() -> SetLabelFont(fTxt);
    hPtTrueVsTrackCut[iCut]  -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtTrueVsTrackCut[iCut]  -> GetYaxis() -> CenterTitle(fCnt);
    hPtTrueVsTrackCut[iCut]  -> GetZaxis() -> SetTitle(sCounts.Data());
    hPtTrueVsTrackCut[iCut]  -> GetZaxis() -> SetTitleFont(fTxt);
    hPtTrueVsTrackCut[iCut]  -> GetZaxis() -> SetTitleSize(fTit[1]);
    hPtTrueVsTrackCut[iCut]  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
    hPtTrueVsTrackCut[iCut]  -> GetZaxis() -> SetLabelFont(fTxt);
    hPtTrueVsTrackCut[iCut]  -> GetZaxis() -> SetLabelSize(fLab[1]);
    hPtTrueVsTrackCut[iCut]  -> GetZaxis() -> CenterTitle(fCnt);
  }

  // set styles of flat delta-pt cut histograms
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    hEffSig[iSig]            -> SetMarkerColor(fColSig[iSig]);
    hEffSig[iSig]            -> SetMarkerStyle(fMarSig[iSig]);
    hEffSig[iSig]            -> SetFillColor(fColSig[iSig]);
    hEffSig[iSig]            -> SetFillStyle(fFil);
    hEffSig[iSig]            -> SetLineColor(fColSig[iSig]);
    hEffSig[iSig]            -> SetLineStyle(fLin);
    hEffSig[iSig]            -> SetLineWidth(fWid);
    hEffSig[iSig]            -> SetTitle(sTitle.Data());
    hEffSig[iSig]            -> SetTitleFont(fTxt);
    hEffSig[iSig]            -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hEffSig[iSig]            -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
    hEffSig[iSig]            -> GetXaxis() -> SetTitleFont(fTxt);
    hEffSig[iSig]            -> GetXaxis() -> SetTitleSize(fTit[0]);
    hEffSig[iSig]            -> GetXaxis() -> SetTitleOffset(fOffX[0]);
    hEffSig[iSig]            -> GetXaxis() -> SetLabelFont(fTxt);
    hEffSig[iSig]            -> GetXaxis() -> SetLabelSize(fLab[0]);
    hEffSig[iSig]            -> GetXaxis() -> CenterTitle(fCnt);
    hEffSig[iSig]            -> GetYaxis() -> SetTitle(sEffAxis.Data());
    hEffSig[iSig]            -> GetYaxis() -> SetTitleFont(fTxt);
    hEffSig[iSig]            -> GetYaxis() -> SetTitleSize(fTit[0]);
    hEffSig[iSig]            -> GetYaxis() -> SetTitleOffset(fOffY[0]);
    hEffSig[iSig]            -> GetYaxis() -> SetLabelFont(fTxt);
    hEffSig[iSig]            -> GetYaxis() -> SetLabelSize(fLab[0]);
    hEffSig[iSig]            -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaSig[iSig]        -> SetMarkerColor(fColSig[iSig]);
    hPtDeltaSig[iSig]        -> SetMarkerStyle(fMarSig[iSig]);
    hPtDeltaSig[iSig]        -> SetFillColor(fColSig[iSig]);
    hPtDeltaSig[iSig]        -> SetFillStyle(fFil);
    hPtDeltaSig[iSig]        -> SetLineColor(fColSig[iSig]);
    hPtDeltaSig[iSig]        -> SetLineStyle(fLin);
    hPtDeltaSig[iSig]        -> SetLineWidth(fWid);
    hPtDeltaSig[iSig]        -> SetTitle(sTitle.Data());
    hPtDeltaSig[iSig]        -> SetTitleFont(fTxt);
    hPtDeltaSig[iSig]        -> GetXaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaSig[iSig]        -> GetXaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaSig[iSig]        -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaSig[iSig]        -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaSig[iSig]        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaSig[iSig]        -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaSig[iSig]        -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaSig[iSig]        -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaSig[iSig]        -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtDeltaSig[iSig]        -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaSig[iSig]        -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaSig[iSig]        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaSig[iSig]        -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaSig[iSig]        -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaSig[iSig]        -> GetYaxis() -> CenterTitle(fCnt);
    hPtTrackSig[iSig]        -> SetMarkerColor(fColSig[iSig]);
    hPtTrackSig[iSig]        -> SetMarkerStyle(fMarSig[iSig]);
    hPtTrackSig[iSig]        -> SetFillColor(fColSig[iSig]);
    hPtTrackSig[iSig]        -> SetFillStyle(fFil);
    hPtTrackSig[iSig]        -> SetLineColor(fColSig[iSig]);
    hPtTrackSig[iSig]        -> SetLineStyle(fLin);
    hPtTrackSig[iSig]        -> SetLineWidth(fWid);
    hPtTrackSig[iSig]        -> SetTitle(sTitle.Data());
    hPtTrackSig[iSig]        -> SetTitleFont(fTxt);
    hPtTrackSig[iSig]        -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtTrackSig[iSig]        -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
    hPtTrackSig[iSig]        -> GetXaxis() -> SetTitleFont(fTxt);
    hPtTrackSig[iSig]        -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtTrackSig[iSig]        -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtTrackSig[iSig]        -> GetXaxis() -> SetLabelFont(fTxt);
    hPtTrackSig[iSig]        -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtTrackSig[iSig]        -> GetXaxis() -> CenterTitle(fCnt);
    hPtTrackSig[iSig]        -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtTrackSig[iSig]        -> GetYaxis() -> SetTitleFont(fTxt);
    hPtTrackSig[iSig]        -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtTrackSig[iSig]        -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtTrackSig[iSig]        -> GetYaxis() -> SetLabelFont(fTxt);
    hPtTrackSig[iSig]        -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtTrackSig[iSig]        -> GetYaxis() -> CenterTitle(fCnt);
    hPtFracSig[iSig]         -> SetMarkerColor(fColSig[iSig]);
    hPtFracSig[iSig]         -> SetMarkerStyle(fMarSig[iSig]);
    hPtFracSig[iSig]         -> SetFillColor(fColSig[iSig]);
    hPtFracSig[iSig]         -> SetFillStyle(fFil);
    hPtFracSig[iSig]         -> SetLineColor(fColSig[iSig]);
    hPtFracSig[iSig]         -> SetLineStyle(fLin);
    hPtFracSig[iSig]         -> SetLineWidth(fWid);
    hPtFracSig[iSig]         -> SetTitle(sTitle.Data());
    hPtFracSig[iSig]         -> SetTitleFont(fTxt);
    hPtFracSig[iSig]         -> GetXaxis() -> SetRangeUser(rFracRange[0], rFracRange[1]);
    hPtFracSig[iSig]         -> GetXaxis() -> SetTitle(sPtFracAxis.Data());
    hPtFracSig[iSig]         -> GetXaxis() -> SetTitleFont(fTxt);
    hPtFracSig[iSig]         -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtFracSig[iSig]         -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtFracSig[iSig]         -> GetXaxis() -> SetLabelFont(fTxt);
    hPtFracSig[iSig]         -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtFracSig[iSig]         -> GetXaxis() -> CenterTitle(fCnt);
    hPtFracSig[iSig]         -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtFracSig[iSig]         -> GetYaxis() -> SetTitleFont(fTxt);
    hPtFracSig[iSig]         -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtFracSig[iSig]         -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtFracSig[iSig]         -> GetYaxis() -> SetLabelFont(fTxt);
    hPtFracSig[iSig]         -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtFracSig[iSig]         -> GetYaxis() -> CenterTitle(fCnt);
    hPtTrkTruSig[iSig]       -> SetMarkerColor(fColSig[iSig]);
    hPtTrkTruSig[iSig]       -> SetMarkerStyle(fMarSig[iSig]);
    hPtTrkTruSig[iSig]       -> SetFillColor(fColSig[iSig]);
    hPtTrkTruSig[iSig]       -> SetFillStyle(fFil);
    hPtTrkTruSig[iSig]       -> SetLineColor(fColSig[iSig]);
    hPtTrkTruSig[iSig]       -> SetLineStyle(fLin);
    hPtTrkTruSig[iSig]       -> SetLineWidth(fWid);
    hPtTrkTruSig[iSig]       -> SetTitle(sTitle.Data());
    hPtTrkTruSig[iSig]       -> SetTitleFont(fTxt);
    hPtTrkTruSig[iSig]       -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtTrkTruSig[iSig]       -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
    hPtTrkTruSig[iSig]       -> GetXaxis() -> SetTitleFont(fTxt);
    hPtTrkTruSig[iSig]       -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtTrkTruSig[iSig]       -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtTrkTruSig[iSig]       -> GetXaxis() -> SetLabelFont(fTxt);
    hPtTrkTruSig[iSig]       -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtTrkTruSig[iSig]       -> GetXaxis() -> CenterTitle(fCnt);
    hPtTrkTruSig[iSig]       -> GetYaxis() -> SetTitle(sCounts.Data());
    hPtTrkTruSig[iSig]       -> GetYaxis() -> SetTitleFont(fTxt);
    hPtTrkTruSig[iSig]       -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtTrkTruSig[iSig]       -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtTrkTruSig[iSig]       -> GetYaxis() -> SetLabelFont(fTxt);
    hPtTrkTruSig[iSig]       -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtTrkTruSig[iSig]       -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaVsFracSig[iSig]  -> SetMarkerColor(fColSig[iSig]);
    hPtDeltaVsFracSig[iSig]  -> SetMarkerStyle(fMarSig[iSig]);
    hPtDeltaVsFracSig[iSig]  -> SetFillColor(fColSig[iSig]);
    hPtDeltaVsFracSig[iSig]  -> SetFillStyle(fFil);
    hPtDeltaVsFracSig[iSig]  -> SetLineColor(fColSig[iSig]);
    hPtDeltaVsFracSig[iSig]  -> SetLineStyle(fLin);
    hPtDeltaVsFracSig[iSig]  -> SetLineWidth(fWid);
    hPtDeltaVsFracSig[iSig]  -> SetTitle(sTitle.Data());
    hPtDeltaVsFracSig[iSig]  -> SetTitleFont(fTxt);
    hPtDeltaVsFracSig[iSig]  -> GetXaxis() -> SetRangeUser(rFracRange[0], rFracRange[1]);
    hPtDeltaVsFracSig[iSig]  -> GetXaxis() -> SetTitle(sPtFracAxis.Data());
    hPtDeltaVsFracSig[iSig]  -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsFracSig[iSig]  -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsFracSig[iSig]  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaVsFracSig[iSig]  -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsFracSig[iSig]  -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsFracSig[iSig]  -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaVsFracSig[iSig]  -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaVsFracSig[iSig]  -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaVsFracSig[iSig]  -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsFracSig[iSig]  -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsFracSig[iSig]  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaVsFracSig[iSig]  -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsFracSig[iSig]  -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsFracSig[iSig]  -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaVsFracSig[iSig]  -> GetZaxis() -> SetTitle(sCounts.Data());
    hPtDeltaVsFracSig[iSig]  -> GetZaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsFracSig[iSig]  -> GetZaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsFracSig[iSig]  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
    hPtDeltaVsFracSig[iSig]  -> GetZaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsFracSig[iSig]  -> GetZaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsFracSig[iSig]  -> GetZaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrueSig[iSig]  -> SetMarkerColor(fColTrk);
    hPtDeltaVsTrueSig[iSig]  -> SetMarkerStyle(fMarTrk);
    hPtDeltaVsTrueSig[iSig]  -> SetFillColor(fColTrk);
    hPtDeltaVsTrueSig[iSig]  -> SetFillStyle(fFil);
    hPtDeltaVsTrueSig[iSig]  -> SetLineColor(fColTrk);
    hPtDeltaVsTrueSig[iSig]  -> SetLineStyle(fLin);
    hPtDeltaVsTrueSig[iSig]  -> SetLineWidth(fWid);
    hPtDeltaVsTrueSig[iSig]  -> SetTitle(sTitle.Data());
    hPtDeltaVsTrueSig[iSig]  -> SetTitleFont(fTxt);
    hPtDeltaVsTrueSig[iSig]  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetXaxis() -> SetTitle(sPtTrueAxis.Data());
    hPtDeltaVsTrueSig[iSig]  -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrueSig[iSig]  -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrueSig[iSig]  -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrueSig[iSig]  -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaVsTrueSig[iSig]  -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrueSig[iSig]  -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrueSig[iSig]  -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrueSig[iSig]  -> GetZaxis() -> SetTitle(sCounts.Data());
    hPtDeltaVsTrueSig[iSig]  -> GetZaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrueSig[iSig]  -> GetZaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetZaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrueSig[iSig]  -> GetZaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrueSig[iSig]  -> GetZaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrackSig[iSig] -> SetMarkerColor(fColTrk);
    hPtDeltaVsTrackSig[iSig] -> SetMarkerStyle(fMarTrk);
    hPtDeltaVsTrackSig[iSig] -> SetFillColor(fColTrk);
    hPtDeltaVsTrackSig[iSig] -> SetFillStyle(fFil);
    hPtDeltaVsTrackSig[iSig] -> SetLineColor(fColTrk);
    hPtDeltaVsTrackSig[iSig] -> SetLineStyle(fLin);
    hPtDeltaVsTrackSig[iSig] -> SetLineWidth(fWid);
    hPtDeltaVsTrackSig[iSig] -> SetTitle(sTitle.Data());
    hPtDeltaVsTrackSig[iSig] -> SetTitleFont(fTxt);
    hPtDeltaVsTrackSig[iSig] -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtDeltaVsTrackSig[iSig] -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
    hPtDeltaVsTrackSig[iSig] -> GetXaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrackSig[iSig] -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrackSig[iSig] -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtDeltaVsTrackSig[iSig] -> GetXaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrackSig[iSig] -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrackSig[iSig] -> GetXaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrackSig[iSig] -> GetYaxis() -> SetRangeUser(rDeltaRange[0], rDeltaRange[1]);
    hPtDeltaVsTrackSig[iSig] -> GetYaxis() -> SetTitle(sPtDeltaAxis.Data());
    hPtDeltaVsTrackSig[iSig] -> GetYaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrackSig[iSig] -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrackSig[iSig] -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtDeltaVsTrackSig[iSig] -> GetYaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrackSig[iSig] -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrackSig[iSig] -> GetYaxis() -> CenterTitle(fCnt);
    hPtDeltaVsTrackSig[iSig] -> GetZaxis() -> SetTitle(sCounts.Data());
    hPtDeltaVsTrackSig[iSig] -> GetZaxis() -> SetTitleFont(fTxt);
    hPtDeltaVsTrackSig[iSig] -> GetZaxis() -> SetTitleSize(fTit[1]);
    hPtDeltaVsTrackSig[iSig] -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
    hPtDeltaVsTrackSig[iSig] -> GetZaxis() -> SetLabelFont(fTxt);
    hPtDeltaVsTrackSig[iSig] -> GetZaxis() -> SetLabelSize(fLab[1]);
    hPtDeltaVsTrackSig[iSig] -> GetZaxis() -> CenterTitle(fCnt);
    hPtTrueVsTrackSig[iSig]  -> SetMarkerColor(fColSig[iSig]);
    hPtTrueVsTrackSig[iSig]  -> SetMarkerStyle(fMarSig[iSig]);
    hPtTrueVsTrackSig[iSig]  -> SetFillColor(fColSig[iSig]);
    hPtTrueVsTrackSig[iSig]  -> SetFillStyle(fFil);
    hPtTrueVsTrackSig[iSig]  -> SetLineColor(fColSig[iSig]);
    hPtTrueVsTrackSig[iSig]  -> SetLineStyle(fLin);
    hPtTrueVsTrackSig[iSig]  -> SetLineWidth(fWid);
    hPtTrueVsTrackSig[iSig]  -> SetTitle(sTitle.Data());
    hPtTrueVsTrackSig[iSig]  -> SetTitleFont(fTxt);
    hPtTrueVsTrackSig[iSig]  -> GetXaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtTrueVsTrackSig[iSig]  -> GetXaxis() -> SetTitle(sPtRecoAxis.Data());
    hPtTrueVsTrackSig[iSig]  -> GetXaxis() -> SetTitleFont(fTxt);
    hPtTrueVsTrackSig[iSig]  -> GetXaxis() -> SetTitleSize(fTit[1]);
    hPtTrueVsTrackSig[iSig]  -> GetXaxis() -> SetTitleOffset(fOffX[1]);
    hPtTrueVsTrackSig[iSig]  -> GetXaxis() -> SetLabelFont(fTxt);
    hPtTrueVsTrackSig[iSig]  -> GetXaxis() -> SetLabelSize(fLab[1]);
    hPtTrueVsTrackSig[iSig]  -> GetXaxis() -> CenterTitle(fCnt);
    hPtTrueVsTrackSig[iSig]  -> GetYaxis() -> SetRangeUser(rPtRange[0], rPtRange[1]);
    hPtTrueVsTrackSig[iSig]  -> GetYaxis() -> SetTitle(sPtTrueAxis.Data());
    hPtTrueVsTrackSig[iSig]  -> GetYaxis() -> SetTitleFont(fTxt);
    hPtTrueVsTrackSig[iSig]  -> GetYaxis() -> SetTitleSize(fTit[1]);
    hPtTrueVsTrackSig[iSig]  -> GetYaxis() -> SetTitleOffset(fOffY[1]);
    hPtTrueVsTrackSig[iSig]  -> GetYaxis() -> SetLabelFont(fTxt);
    hPtTrueVsTrackSig[iSig]  -> GetYaxis() -> SetLabelSize(fLab[1]);
    hPtTrueVsTrackSig[iSig]  -> GetYaxis() -> CenterTitle(fCnt);
    hPtTrueVsTrackSig[iSig]  -> GetZaxis() -> SetTitle(sCounts.Data());
    hPtTrueVsTrackSig[iSig]  -> GetZaxis() -> SetTitleFont(fTxt);
    hPtTrueVsTrackSig[iSig]  -> GetZaxis() -> SetTitleSize(fTit[1]);
    hPtTrueVsTrackSig[iSig]  -> GetZaxis() -> SetTitleOffset(fOffZ[1]);
    hPtTrueVsTrackSig[iSig]  -> GetZaxis() -> SetLabelFont(fTxt);
    hPtTrueVsTrackSig[iSig]  -> GetZaxis() -> SetLabelSize(fLab[1]);
    hPtTrueVsTrackSig[iSig]  -> GetZaxis() -> CenterTitle(fCnt);
  }

  cout << "      Set styles." << endl;
  return;

}  // end 'SetStyles()'



void SDeltaPtCutStudy::MakePlots() {

  // misc plot parameters
  const TString sBeforeTitle   = "Before #Deltap_{T}/p_{T} cuts";
  const TString sAfterCutTitle = "After #Deltap_{T}/p_{T} < 0.03 cut";
  const TString sAfterSigTitle = "After 2 #times #sigma(#Deltap_{T}/p_{T}) cut";

  // legend parameters
  const TString sLegTrue("truth");
  const TString sLegTrack("tracks (w/ cuts)");
  const TString sLegMu("Mean #Deltap_{T} / p_{T}^{reco} (n = 0)");
  const TString sLegProjBase("p_{T}^{reco} = ");
  const TString sLegProjSigBase("n = ");
  const TString sLegCutBase("#Deltap_{T} / p_{T}^{reco} < ");
  const TString sLegSigBase("#Deltap_{T} / p_{T}^{reco} #in ");

  // create projection legend text
  TString         sLegProjTxt;
  vector<TString> sLegProj; 
  for (const double proj : ptProj) {
    sLegProjTxt  = sLegProjBase;
    sLegProjTxt += (float) proj;
    sLegProjTxt += " GeV/c";
    sLegProj.push_back(sLegProjTxt);
  }

  // create flat delta-pt cut legend text
  TString         sLegCutTxt;
  vector<TString> sLegCut;
  for (const double cut : ptDeltaMax) {
    sLegCutTxt  = sLegCutBase;
    sLegCutTxt += (float) cut;
    sLegCut.push_back(sLegCutTxt);
  }

  // create pt-dependent delta-pt cut legend text
  TString         sLegSigTxt;
  TString         sLegDeltaTxt;
  TString         sLegProjSigTxt;
  vector<TString> sLegSig;
  vector<TString> sLegDelta;
  vector<TString> sLegProjSig;
  for (const double sig : ptDeltaSig) {

    // make sigma text
    sLegSigTxt  = sLegSigBase;
    sLegSigTxt += (float) sig;
    sLegSigTxt += " #times sigma(#Deltap_{T} / p_{T}^{reco})";
    sLegSig.push_back(sLegSigTxt);

    // make sigma cut text
    sLegDeltaTxt  = "";
    sLegDeltaTxt += (float) sig;
    sLegDeltaTxt += " #times #sigma(#Deltap_{T} / p_{T}^{reco})";
    sLegDelta.push_back(sLegDeltaTxt);

    // make sigma projection text
    sLegProjSigTxt  = sLegProjSigBase;
    sLegProjSigTxt += (float) sig;
    sLegProjSig.push_back(sLegProjSigTxt);
  }

  // cut legend parameters
  array<TString, Const::NTrkCuts> sTrkCuts;
  sTrkCuts[0]  = "|v_{z}| < ";
  sTrkCuts[0] += vzTrkMax;
  sTrkCuts[0] += " cm";
  sTrkCuts[1]  = "N_{hit}^{intt} #geq ";
  sTrkCuts[1] += nInttTrkMin;
  sTrkCuts[2]  = "N_{hit}^{mvtx} > ";
  sTrkCuts[2] += nMVtxTrkMin;
  sTrkCuts[3]  = "N_{hit}^{tpc} > ";
  sTrkCuts[3] += nTpcTrkMin;
  sTrkCuts[4]  = "p_{T}^{reco} > ";
  sTrkCuts[4] += (float) ptTrkMin;
  sTrkCuts[4] += " GeV/c";
  sTrkCuts[5]  = "quality < ";
  sTrkCuts[5] += qualTrkMax;

  // make legends
  const uint32_t fColLe                 = 0;
  const uint32_t fFilLe                 = 0;
  const uint32_t fLinLe                 = 0;
  const float    yObjLe                 = 0.1 + ((nDPtCuts + 2) * 0.05);
  const float    yObjMu                 = 0.1 + ((nSigCuts + 1) * 0.05);
  const float    yObjDel                = 0.1 + (nSigCuts * 0.05);
  const float    yObjPro                = 0.1 + (nProj * 0.05);
  const float    yObjSig                = 0.1 + ((nSigCuts + 2) * 0.05);
  const float    fLegXY[Const::NVtx]    = {0.1, 0.1, 0.3, yObjLe};
  const float    fLegMuXY[Const::NVtx]  = {0.1, 0.1, 0.3, yObjMu};
  const float    fLegDelXY[Const::NVtx] = {0.1, 0.1, 0.3, yObjDel};
  const float    fLegProXY[Const::NVtx] = {0.1, 0.1, 0.3, yObjPro};
  const float    fLegSigXY[Const::NVtx] = {0.1, 0.1, 0.3, yObjSig};

  TLegend *leg = new TLegend(fLegXY[0], fLegXY[1], fLegXY[2], fLegXY[3]);
  leg -> SetFillColor(fColLe);
  leg -> SetFillStyle(fFilLe);
  leg -> SetLineColor(fColLe);
  leg -> SetLineStyle(fLinLe);
  leg -> SetTextFont(fTxt);
  leg -> SetTextAlign(fAln);
  leg -> AddEntry(hPtTruth,  sLegTrue.Data(),  "pf");
  leg -> AddEntry(hPtTrkTru, sLegTrack.Data(), "pf");
  for (size_t iCut = 0; iCut < nDPtCuts; iCut++) {
    leg -> AddEntry(hPtTrkTruCut[iCut], sLegCut[iCut].Data(), "pf");
  }

  TLegend *legMu = new TLegend(fLegMuXY[0], fLegMuXY[1], fLegMuXY[2], fLegMuXY[3]);
  legMu -> SetFillColor(fColLe);
  legMu -> SetFillStyle(fFilLe);
  legMu -> SetLineColor(fColLe);
  legMu -> SetLineStyle(fLinLe);
  legMu -> SetTextFont(fTxt);
  legMu -> SetTextAlign(fAln);
  legMu -> AddEntry(grMuProj, sLegMu.Data(), "p");
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    legMu -> AddEntry(grMuHiProj[iSig], sLegProjSig[iSig].Data(), "p");
  }

  TLegend *legDel = new TLegend(fLegDelXY[0], fLegDelXY[1], fLegDelXY[2], fLegDelXY[3]);
  legDel -> SetFillColor(fColLe);
  legDel -> SetFillStyle(fFilLe);
  legDel -> SetLineColor(fColLe);
  legDel -> SetLineStyle(fLinLe);
  legDel -> SetTextFont(fTxt);
  legDel -> SetTextAlign(fAln);
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    legDel -> AddEntry(fMuHiProj[iSig], sLegDelta[iSig].Data(), "l");
  }

  TLegend *legPro = new TLegend(fLegProXY[0], fLegProXY[1], fLegProXY[2], fLegProXY[3]);
  legPro -> SetFillColor(fColLe);
  legPro -> SetFillStyle(fFilLe);
  legPro -> SetLineColor(fColLe);
  legPro -> SetLineStyle(fLinLe);
  legPro -> SetTextFont(fTxt);
  legPro -> SetTextAlign(fAln);
  for (size_t iProj = 0; iProj < nProj; iProj++) {
    legPro -> AddEntry(hPtDeltaProj[iProj], sLegProj[iProj].Data(), "pf");
  }

  TLegend *legSig = new TLegend(fLegSigXY[0], fLegSigXY[1], fLegSigXY[2], fLegSigXY[3]);
  legSig -> SetFillColor(fColLe);
  legSig -> SetFillStyle(fFilLe);
  legSig -> SetLineColor(fColLe);
  legSig -> SetLineStyle(fLinLe);
  legSig -> SetTextFont(fTxt);
  legSig -> SetTextAlign(fAln);
  legSig -> AddEntry(hPtTruth,  sLegTrue.Data(),  "pf");
  legSig -> AddEntry(hPtTrkTru, sLegTrack.Data(), "pf");
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    legSig -> AddEntry(hPtTrkTruSig[iSig], sLegSig[iSig].Data(), "pf");
  }
  cout << "      Made legends." << endl;

  // make text boxes
  const uint32_t  fColInf             = 0;
  const uint32_t  fFilInf             = 0;
  const uint32_t  fLinInf             = 0;
  const float     yObjInf             = 0.1 + (nTxt * 0.05);
  const float     yObjCut             = 0.1 + (Const::NTrkCuts * 0.05);
  const float     fInfXY[Const::NVtx] = {0.3, 0.1, 0.5, yObjInf};
  const float     fCutXY[Const::NVtx] = {0.5, 0.1, 0.7, yObjCut};

  TPaveText *info = new TPaveText(fInfXY[0], fInfXY[1], fInfXY[2], fInfXY[3], "NDC NB");
  info -> SetFillColor(fColInf);
  info -> SetFillStyle(fFilInf);
  info -> SetLineColor(fColInf);
  info -> SetLineStyle(fLinInf);
  info -> SetTextFont(fTxt);
  info -> SetTextAlign(fAln);
  for (size_t iTxt = 0; iTxt < nTxt; iTxt++) {
    info -> AddText(sInfo[iTxt].Data());
  }

  TPaveText *cuts = new TPaveText(fCutXY[0], fCutXY[1], fCutXY[2], fCutXY[3], "NDC NB");
  cuts -> SetFillColor(fColInf);
  cuts -> SetFillStyle(fFilInf);
  cuts -> SetLineColor(fColInf);
  cuts -> SetLineStyle(fLinInf);
  cuts -> SetTextFont(fTxt);
  cuts -> SetTextAlign(fAln);
  for (uint16_t iTrkCut = 0; iTrkCut < Const::NTrkCuts; iTrkCut++) {
    cuts -> AddText(sTrkCuts[iTrkCut].Data());
  }
  cout << "      Made text." << endl;

  // make line
  const uint32_t fColLi              = 1;
  const uint32_t fLinLi              = 9;
  const uint32_t fWidLi              = 1;
  const float    fLinXY[Const::NVtx] = {rPtRange[0], 1., rPtRange[1], 1.};

  TLine *line = new TLine(fLinXY[0], fLinXY[1], fLinXY[2], fLinXY[3]);
  line -> SetLineColor(fColLi);
  line -> SetLineStyle(fLinLi);
  line -> SetLineWidth(fWidLi);
  cout << "      Made line." << endl;

  // make plots
  const uint32_t width(750);
  const uint32_t width2D(1500);
  const uint32_t height(950);
  const uint32_t heightNR(750);
  const uint32_t fMode(0);
  const uint32_t fBord(2);
  const uint32_t fGrid(0);
  const uint32_t fTick(1);
  const uint32_t fLogX(0);
  const uint32_t fLogY1(1);
  const uint32_t fLogY2(1);
  const uint32_t fLogYNR(0);
  const uint32_t fFrame(0);
  const float    fMarginL(0.15);
  const float    fMarginR(0.02);
  const float    fMarginR2D(0.15);
  const float    fMarginT1(0.005);
  const float    fMarginT2(0.02);
  const float    fMarginTNR(0.02);
  const float    fMarginB1(0.25);
  const float    fMarginB2(0.005);
  const float    fMarginBNR(0.15);
  const float    fEffXY[Const::NVtx]       = {0.,  0.,   1.,  0.35};
  const float    fTrksXY[Const::NVtx]      = {0.,  0.35, 1.,  1.};
  const float    fTwoDimXY[Const::NVtx]    = {0.,  0.,   0.5, 1.};
  const float    fProjectXY[Const::NVtx]   = {0.5, 0.,   1.,  1.};
  const float    fBeforeDPtXY[Const::NVtx] = {0.,  0.,   0.5, 1.};
  const float    fAfterDPtXY[Const::NVtx]  = {0.5, 0.,   1.,  1.};

  TCanvas *cEffCut = new TCanvas("cEfficiency_FlatCut", "", width, height);
  TPad    *pEffCut = new TPad("pEffCut", "", fEffXY[0],  fEffXY[1],  fEffXY[2],  fEffXY[3]);
  TPad    *pTrkCut = new TPad("pTrkCut", "", fTrksXY[0], fTrksXY[1], fTrksXY[2], fTrksXY[3]);
  cEffCut -> SetGrid(fGrid, fGrid);
  cEffCut -> SetTicks(fTick, fTick);
  cEffCut -> SetBorderMode(fMode);
  cEffCut -> SetBorderSize(fBord);
  pEffCut -> SetGrid(fGrid, fGrid);
  pEffCut -> SetTicks(fTick, fTick);
  pEffCut -> SetLogx(fLogX);
  pEffCut -> SetLogy(fLogY1);
  pEffCut -> SetBorderMode(fMode);
  pEffCut -> SetBorderSize(fBord);
  pEffCut -> SetFrameBorderMode(fFrame);
  pEffCut -> SetLeftMargin(fMarginL);
  pEffCut -> SetRightMargin(fMarginR);
  pEffCut -> SetTopMargin(fMarginT1);
  pEffCut -> SetBottomMargin(fMarginB1);
  pTrkCut -> SetGrid(fGrid, fGrid);
  pTrkCut -> SetTicks(fTick, fTick);
  pTrkCut -> SetLogx(fLogX);
  pTrkCut -> SetLogy(fLogY2);
  pTrkCut -> SetBorderMode(fMode);
  pTrkCut -> SetBorderSize(fBord);
  pTrkCut -> SetFrameBorderMode(fFrame);
  pTrkCut -> SetLeftMargin(fMarginL);
  pTrkCut -> SetRightMargin(fMarginR);
  pTrkCut -> SetTopMargin(fMarginT2);
  pTrkCut -> SetBottomMargin(fMarginB2);
  cEffCut -> cd();
  pEffCut -> Draw();
  pTrkCut -> Draw();
  pEffCut -> cd();
  hEff    -> Draw();
  for (size_t iCut = 0; iCut < nDPtCuts; iCut++) {
    hEffCut[iCut] -> Draw("SAME");
  }
  line      -> Draw();
  pTrkCut   -> cd();
  hPtTruth  -> Draw();
  hPtTrkTru -> Draw("SAME");
  for (size_t iCut = 0; iCut < nDPtCuts; iCut++) {
    hPtTrkTruCut[iCut] -> Draw("SAME");
  }
  leg     -> Draw();
  info    -> Draw();
  cuts    -> Draw();
  fOutput -> cd();
  cEffCut -> Write();
  cEffCut -> Close();

  TCanvas *cEffSig = new TCanvas("cEfficiency_SigmaCut", "", width, height);
  TPad    *pEffSig = new TPad("pEffSig", "", fEffXY[0],  fEffXY[1],  fEffXY[2],  fEffXY[3]);
  TPad    *pTrkSig = new TPad("pTrkSig", "", fTrksXY[0], fTrksXY[1], fTrksXY[2], fTrksXY[3]);
  cEffSig -> SetGrid(fGrid, fGrid);
  cEffSig -> SetTicks(fTick, fTick);
  cEffSig -> SetBorderMode(fMode);
  cEffSig -> SetBorderSize(fBord);
  pEffSig -> SetGrid(fGrid, fGrid);
  pEffSig -> SetTicks(fTick, fTick);
  pEffSig -> SetLogx(fLogX);
  pEffSig -> SetLogy(fLogY1);
  pEffSig -> SetBorderMode(fMode);
  pEffSig -> SetBorderSize(fBord);
  pEffSig -> SetFrameBorderMode(fFrame);
  pEffSig -> SetLeftMargin(fMarginL);
  pEffSig -> SetRightMargin(fMarginR);
  pEffSig -> SetTopMargin(fMarginT1);
  pEffSig -> SetBottomMargin(fMarginB1);
  pTrkSig -> SetGrid(fGrid, fGrid);
  pTrkSig -> SetTicks(fTick, fTick);
  pTrkSig -> SetLogx(fLogX);
  pTrkSig -> SetLogy(fLogY2);
  pTrkSig -> SetBorderMode(fMode);
  pTrkSig -> SetBorderSize(fBord);
  pTrkSig -> SetFrameBorderMode(fFrame);
  pTrkSig -> SetLeftMargin(fMarginL);
  pTrkSig -> SetRightMargin(fMarginR);
  pTrkSig -> SetTopMargin(fMarginT2);
  pTrkSig -> SetBottomMargin(fMarginB2);
  cEffSig -> cd();
  pEffSig -> Draw();
  pTrkSig -> Draw();
  pEffSig -> cd();
  hEff    -> Draw();
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    hEffSig[iSig] -> Draw("SAME");
  }
  line      -> Draw();
  pTrkSig   -> cd();
  hPtTruth  -> Draw();
  hPtTrkTru -> Draw("SAME");
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    hPtTrkTruSig[iSig] -> Draw("SAME");
  }
  legSig  -> Draw();
  info    -> Draw();
  cuts    -> Draw();
  fOutput -> cd();
  cEffSig -> Write();
  cEffSig -> Close();

  TCanvas *cRejCut = new TCanvas("cReject_FlatCut", "", width, heightNR);
  cRejCut  -> SetGrid(fGrid, fGrid);
  cRejCut  -> SetTicks(fTick, fTick);
  cRejCut  -> SetBorderMode(fMode);
  cRejCut  -> SetBorderSize(fBord);
  cRejCut  -> SetFrameBorderMode(fFrame);
  cRejCut  -> SetLeftMargin(fMarginL);
  cRejCut  -> SetRightMargin(fMarginR);
  cRejCut  -> SetTopMargin(fMarginTNR);
  cRejCut  -> SetBottomMargin(fMarginBNR);
  cRejCut  -> SetLogx(fLogX);
  cRejCut  -> SetLogy(fLogYNR);
  cRejCut  -> cd();
  grRejCut -> Draw("ALP");
  info     -> Draw();
  cuts     -> Draw();
  fOutput  -> cd();
  cRejCut  -> Write();
  cRejCut  -> Close();

  TCanvas *cRejSig = new TCanvas("cReject_SigmaCut", "", width, heightNR);
  cRejSig  -> SetGrid(fGrid, fGrid);
  cRejSig  -> SetTicks(fTick, fTick);
  cRejSig  -> SetBorderMode(fMode);
  cRejSig  -> SetBorderSize(fBord);
  cRejSig  -> SetFrameBorderMode(fFrame);
  cRejSig  -> SetLeftMargin(fMarginL);
  cRejSig  -> SetRightMargin(fMarginR);
  cRejSig  -> SetTopMargin(fMarginTNR);
  cRejSig  -> SetBottomMargin(fMarginBNR);
  cRejSig  -> SetLogx(fLogX);
  cRejSig  -> SetLogy(fLogYNR);
  cRejSig  -> cd();
  grRejSig -> Draw("ALP");
  info     -> Draw();
  cuts     -> Draw();
  fOutput  -> cd();
  cRejSig  -> Write();
  cRejSig  -> Close();

  TCanvas *cPtTruVsTrkCut = new TCanvas("cPtTruthVsReco_FlatCut", "", width2D, heightNR);
  TPad    *pBeforeCut     = new TPad("pBeforeCut", "", fBeforeDPtXY[0], fBeforeDPtXY[1], fBeforeDPtXY[2], fBeforeDPtXY[3]);
  TPad    *pAfterCut      = new TPad("pAfterCut",  "", fAfterDPtXY[0],  fAfterDPtXY[1],  fAfterDPtXY[2],  fAfterDPtXY[3]);
  cPtTruVsTrkCut                -> SetGrid(fGrid, fGrid);
  cPtTruVsTrkCut                -> SetTicks(fTick, fTick);
  cPtTruVsTrkCut                -> SetBorderMode(fMode);
  cPtTruVsTrkCut                -> SetBorderSize(fBord);
  pBeforeCut                    -> SetGrid(fGrid, fGrid);
  pBeforeCut                    -> SetTicks(fTick, fTick);
  pBeforeCut                    -> SetLogx(fLogX);
  pBeforeCut                    -> SetLogy(fLogYNR);
  pBeforeCut                    -> SetBorderMode(fMode);
  pBeforeCut                    -> SetBorderSize(fBord);
  pBeforeCut                    -> SetFrameBorderMode(fFrame);
  pBeforeCut                    -> SetLeftMargin(fMarginL);
  pBeforeCut                    -> SetRightMargin(fMarginR2D);
  pBeforeCut                    -> SetBottomMargin(fMarginBNR);
  pAfterCut                     -> SetGrid(fGrid, fGrid);
  pAfterCut                     -> SetTicks(fTick, fTick);
  pAfterCut                     -> SetLogx(fLogX);
  pAfterCut                     -> SetLogy(fLogYNR);
  pAfterCut                     -> SetBorderMode(fMode);
  pAfterCut                     -> SetBorderSize(fBord);
  pAfterCut                     -> SetFrameBorderMode(fFrame);
  pAfterCut                     -> SetLeftMargin(fMarginL);
  pAfterCut                     -> SetRightMargin(fMarginR2D);
  pAfterCut                     -> SetBottomMargin(fMarginBNR);
  cPtTruVsTrkCut                -> cd();
  pBeforeCut                    -> Draw();
  pAfterCut                     -> Draw();
  pBeforeCut                    -> cd();
  hPtTrueVsTrack                -> SetTitle(sBeforeTitle.Data());
  hPtTrueVsTrack                -> Draw("colz");
  cuts                          -> Draw();
  pAfterCut                     -> cd();
  hPtTrueVsTrackCut[iCutToDraw] -> SetTitle(sAfterCutTitle.Data());
  hPtTrueVsTrackCut[iCutToDraw] -> Draw("colz");
  info                          -> Draw();
  fOutput                       -> cd();
  cPtTruVsTrkCut                -> Write();
  cPtTruVsTrkCut                -> Close();

  TCanvas *cPtTruVsTrkSig = new TCanvas("cPtTruthVsReco_SigmaCut", "", width2D, heightNR);
  TPad    *pBeforeSig     = new TPad("pBeforeSig", "", fBeforeDPtXY[0], fBeforeDPtXY[1], fBeforeDPtXY[2], fBeforeDPtXY[3]);
  TPad    *pAfterSig      = new TPad("pAfterSig",  "", fAfterDPtXY[0],  fAfterDPtXY[1],  fAfterDPtXY[2],  fAfterDPtXY[3]);
  cPtTruVsTrkSig                -> SetGrid(fGrid, fGrid);
  cPtTruVsTrkSig                -> SetTicks(fTick, fTick);
  cPtTruVsTrkSig                -> SetBorderMode(fMode);
  cPtTruVsTrkSig                -> SetBorderSize(fBord);
  pBeforeSig                    -> SetGrid(fGrid, fGrid);
  pBeforeSig                    -> SetTicks(fTick, fTick);
  pBeforeSig                    -> SetLogx(fLogX);
  pBeforeSig                    -> SetLogy(fLogYNR);
  pBeforeSig                    -> SetBorderMode(fMode);
  pBeforeSig                    -> SetBorderSize(fBord);
  pBeforeSig                    -> SetFrameBorderMode(fFrame);
  pBeforeSig                    -> SetLeftMargin(fMarginL);
  pBeforeSig                    -> SetRightMargin(fMarginR2D);
  pBeforeSig                    -> SetBottomMargin(fMarginBNR);
  pAfterSig                     -> SetGrid(fGrid, fGrid);
  pAfterSig                     -> SetTicks(fTick, fTick);
  pAfterSig                     -> SetLogx(fLogX);
  pAfterSig                     -> SetLogy(fLogYNR);
  pAfterSig                     -> SetBorderMode(fMode);
  pAfterSig                     -> SetBorderSize(fBord);
  pAfterSig                     -> SetFrameBorderMode(fFrame);
  pAfterSig                     -> SetLeftMargin(fMarginL);
  pAfterSig                     -> SetRightMargin(fMarginR2D);
  pAfterSig                     -> SetBottomMargin(fMarginBNR);
  cPtTruVsTrkSig                -> cd();
  pBeforeSig                    -> Draw();
  pAfterSig                     -> Draw();
  pBeforeSig                    -> cd();
  hPtTrueVsTrack                -> Draw("colz");
  cuts                          -> Draw();
  pAfterSig                     -> cd();
  hPtTrueVsTrackSig[iSigToDraw] -> SetTitle(sAfterSigTitle.Data());
  hPtTrueVsTrackSig[iSigToDraw] -> Draw("colz");
  info                          -> Draw();
  fOutput                       -> cd();
  cPtTruVsTrkSig                -> Write();
  cPtTruVsTrkSig                -> Close();

  TCanvas *cPtDelVsTrk = new TCanvas("cPtDeltaVsTrack", "", width2D, heightNR);
  TPad    *pTwoDim     = new TPad("pTwoDim",      "", fTwoDimXY[0],  fTwoDimXY[1],  fTwoDimXY[2],  fTwoDimXY[3]);
  TPad    *pProject    = new TPad("pProjections", "", fProjectXY[0], fProjectXY[1], fProjectXY[2], fProjectXY[3]);
  cPtDelVsTrk     -> SetGrid(fGrid, fGrid);
  cPtDelVsTrk     -> SetTicks(fTick, fTick);
  cPtDelVsTrk     -> SetBorderMode(fMode);
  cPtDelVsTrk     -> SetBorderSize(fBord);
  pTwoDim         -> SetGrid(fGrid, fGrid);
  pTwoDim         -> SetTicks(fTick, fTick);
  pTwoDim         -> SetLogx(fLogX);
  pTwoDim         -> SetLogy(fLogYNR);
  pTwoDim         -> SetBorderMode(fMode);
  pTwoDim         -> SetBorderSize(fBord);
  pTwoDim         -> SetFrameBorderMode(fFrame);
  pTwoDim         -> SetLeftMargin(fMarginL);
  pTwoDim         -> SetRightMargin(fMarginR2D);
  pTwoDim         -> SetTopMargin(fMarginTNR);
  pTwoDim         -> SetBottomMargin(fMarginBNR);
  pProject        -> SetGrid(fGrid, fGrid);
  pProject        -> SetTicks(fTick, fTick);
  pProject        -> SetLogx(fLogX);
  pProject        -> SetLogy(fLogYNR);
  pProject        -> SetBorderMode(fMode);
  pProject        -> SetBorderSize(fBord);
  pProject        -> SetFrameBorderMode(fFrame);
  pProject        -> SetLeftMargin(fMarginL);
  pProject        -> SetRightMargin(fMarginR2D);
  pProject        -> SetTopMargin(fMarginTNR);
  pProject        -> SetBottomMargin(fMarginBNR);
  cPtDelVsTrk     -> cd();
  pTwoDim         -> Draw();
  pProject        -> Draw();
  pTwoDim         -> cd();
  hPtDeltaVsTrack -> Draw("colz");
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    fMuHiProj[iSig] -> Draw("same");
    fMuLoProj[iSig] -> Draw("same");
  }
  legDel          -> Draw();
  cuts            -> Draw();
  pProject        -> cd();
  hPtDeltaProj[0] -> Draw();
  fPtDeltaProj[0] -> Draw("same");
  for (size_t iProj = 1; iProj < nProj; iProj++) {
    hPtDeltaProj[iProj] -> Draw("same");
    fPtDeltaProj[iProj] -> Draw("same");
  }
  legPro      -> Draw();
  info        -> Draw();
  fOutput     -> cd();
  cPtDelVsTrk -> Write();
  cPtDelVsTrk -> Close();

  TCanvas *cDeltaPt = new TCanvas("cDeltaPt", "", width, heightNR);
  cDeltaPt  -> SetGrid(fGrid, fGrid);
  cDeltaPt  -> SetTicks(fTick, fTick);
  cDeltaPt  -> SetBorderMode(fMode);
  cDeltaPt  -> SetBorderSize(fBord);
  cDeltaPt  -> SetFrameBorderMode(fFrame);
  cDeltaPt  -> SetLeftMargin(fMarginL);
  cDeltaPt  -> SetRightMargin(fMarginR);
  cDeltaPt  -> SetTopMargin(fMarginTNR);
  cDeltaPt  -> SetBottomMargin(fMarginBNR);
  cDeltaPt  -> SetLogx(fLogX);
  cDeltaPt  -> SetLogy(fLogYNR);
  cDeltaPt  -> cd();
  hPtDelta  -> Draw();
  info      -> Draw();
  cuts      -> Draw();
  fOutput   -> cd();
  cDeltaPt  -> Write();
  cDeltaPt  -> Close();

  TCanvas *cMuProj = new TCanvas("cMuDeltaPt", "", width, heightNR);
  cMuProj  -> SetGrid(fGrid, fGrid);
  cMuProj  -> SetTicks(fTick, fTick);
  cMuProj  -> SetBorderMode(fMode);
  cMuProj  -> SetBorderSize(fBord);
  cMuProj  -> SetFrameBorderMode(fFrame);
  cMuProj  -> SetLeftMargin(fMarginL);
  cMuProj  -> SetRightMargin(fMarginR);
  cMuProj  -> SetTopMargin(fMarginTNR);
  cMuProj  -> SetBottomMargin(fMarginBNR);
  cMuProj  -> SetLogx(fLogX);
  cMuProj  -> SetLogy(fLogYNR);
  cMuProj  -> cd();
  grMuProj -> Draw("ALP");
  for (size_t iSig = 0; iSig < nSigCuts; iSig++) {
    grMuHiProj[iSig] -> Draw("LP");
    grMuLoProj[iSig] -> Draw("LP");
  }
  legMu   -> Draw();
  info    -> Draw();
  cuts    -> Draw();
  fOutput -> cd();
  cMuProj -> Write();
  cMuProj -> Close();

  TCanvas *cSigProj = new TCanvas("cSigmaDeltaPt", "", width, heightNR);
  cSigProj  -> SetGrid(fGrid, fGrid);
  cSigProj  -> SetTicks(fTick, fTick);
  cSigProj  -> SetBorderMode(fMode);
  cSigProj  -> SetBorderSize(fBord);
  cSigProj  -> SetFrameBorderMode(fFrame);
  cSigProj  -> SetLeftMargin(fMarginL);
  cSigProj  -> SetRightMargin(fMarginR);
  cSigProj  -> SetTopMargin(fMarginTNR);
  cSigProj  -> SetBottomMargin(fMarginBNR);
  cSigProj  -> SetLogx(fLogX);
  cSigProj  -> SetLogy(fLogYNR);
  cSigProj  -> cd();
  grSigProj -> Draw("ALP");
  info      -> Draw();
  cuts      -> Draw();
  fOutput   -> cd();
  cSigProj  -> Write();
  cSigProj  -> Close();

  cout << "      Made plots." << endl;
  return;

}  // end 'MakePlots()'

// end ------------------------------------------------------------------------
